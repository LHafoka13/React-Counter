{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","href","Counter","this","getBadgeClasses","formatCount","onClick","props","onIncrement","counter","onDelete","id","classes","value","count","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAYeA,EAVA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACb,OACI,qBAAKC,UAAU,+BAAf,SACI,oBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBAA4C,sBAAMD,UAAU,mCAAhB,SAAoDD,UCuB7FG,E,4JAxBX,WAAU,IAAD,OAEL,OACA,gCACI,sBAAMF,UAAWG,KAAKC,kBAAtB,SAA0CD,KAAKE,gBAC/C,wBAAQC,QAAS,kBAAM,EAAKC,MAAMC,YAAY,EAAKD,MAAME,UAAUT,UAAU,2BAA7E,uBACA,wBAAQM,QAAS,kBAAM,EAAKC,MAAMG,SAAS,EAAKH,MAAME,QAAQE,KAAKX,UAAU,4BAA7E,yB,6BAKP,WACM,IAAIY,EAAU,mBAEd,OADAA,GAAwC,IAA7BT,KAAKI,MAAME,QAAQI,MAAc,UAAY,Y,yBAI/D,WAAe,IACGC,EAASX,KAAKI,MAAME,QAA3BI,MACP,OAAiB,IAAVC,EAAc,OAASA,M,GArBhBC,aCiBPC,E,4JAbX,WAAU,IAAD,EAC8Cb,KAAKI,MAAjDU,EADF,EACEA,QAASC,EADX,EACWA,SAAUR,EADrB,EACqBA,SAAUF,EAD/B,EAC+BA,YACpC,OACA,gCACI,wBAAQF,QAASW,EAASjB,UAAU,6BAApC,mBACCkB,EAASC,KAAI,SAAAV,GAAO,OACjB,cAAC,EAAD,CAA0BC,SAAUA,EAAUF,YAAaA,EAAaC,QAASA,GAAnEA,EAAQE,c,GATfI,aCiDRK,G,kNA5CbC,MAAQ,CACFH,SAAU,CACN,CAACP,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,GACf,CAACF,GAAI,EAAGE,MAAO,K,EAItBS,gBAAkB,SAACb,GACf,IAAMS,EAAQ,YAAO,EAAKG,MAAMH,UAC1BK,EAAQL,EAASM,QAAQf,GAC/BS,EAASK,GAAT,eAAsBd,GACtBS,EAASK,GAAOV,QAChB,EAAKY,SAAS,CAACP,c,EAGnBQ,aAAe,SAACC,GACZ,IAAMT,EAAW,EAAKG,MAAMH,SAASU,QAAO,SAAAC,GAAC,OAAIA,EAAElB,KAAOgB,KAC1D,EAAKF,SAAS,CAACP,c,EAGnBY,YAAc,WACV,EAAKT,MAAMH,SAASC,KAAI,SAAAU,GAEpB,OADAA,EAAEhB,MAAQ,EACHgB,KAGX,EAAKJ,SAAS,CAACT,c,4CAGtB,WACE,OACA,eAAC,IAAMe,SAAP,WACE,cAAC,EAAD,CAAQhC,cAAeI,KAAKkB,MAAMH,SAASU,QAAO,SAAAC,GAAC,OAAIA,EAAEhB,MAAQ,KAAGmB,SACpE,sBAAMhC,UAAU,YAAhB,SACE,cAAC,EAAD,CAAUkB,SAAUf,KAAKkB,MAAMH,SAAUD,QAASd,KAAK2B,YAAatB,YAAaL,KAAKmB,gBAAiBZ,SAAUP,KAAKuB,wB,GArC5GX,cCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e6235b9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = ({totalCounters}) => {\r\n    return ( \r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">Navbar <span className='badge badge-pill badge-secondary'>{totalCounters}</span>\r\n            </a>\r\n        </nav> \r\n\r\n        );\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    \r\n    render() { \r\n     \r\n        return ( \r\n        <div>\r\n            <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n            <button onClick={() => this.props.onIncrement(this.props.counter)} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n            <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n        </div>\r\n       ); \r\n    }\r\n\r\n     getBadgeClasses() {\r\n           let classes = 'badge m-2 badge-';\r\n           classes += this.props.counter.value === 0 ? 'warning' : 'primary';\r\n           return classes;\r\n       }\r\n    \r\n    formatCount() {\r\n        const {value: count} = this.props.counter;\r\n        return count === 0 ? 'Zero' : count;\r\n    }\r\n}\r\n\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n   \r\n\r\n    render() { \r\n        const {onReset, counters, onDelete, onIncrement} = this.props;\r\n        return ( \r\n        <div>\r\n            <button onClick={onReset} className=\"btn btn-primary brn-sm m-2\">Reset</button>\r\n            {counters.map(counter => \r\n                <Counter key={counter.id} onDelete={onDelete} onIncrement={onIncrement} counter={counter}/>\r\n               )}\r\n        </div> \r\n    );\r\n    }\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react'\nimport NavBar from './components/navbar'\nimport Counters from './components/counters';\nimport './App.css';\n\n\n\nclass App extends Component {\n  state = { \n        counters: [\n            {id: 1, value: 4},\n            {id: 2, value: 0},\n            {id: 3, value: 0},\n            {id: 4, value: 0},\n        ]\n     };\n\n     handleIncrement = (counter) => {\n         const counters = [...this.state.counters];\n         const index = counters.indexOf(counter)\n         counters[index] = {...counter};\n         counters[index].value++;\n         this.setState({counters})\n     }\n\n     handleDelete = (counterId) => {\n         const counters = this.state.counters.filter(c => c.id !== counterId);\n         this.setState({counters});\n     }\n     \n     handleReset = () => {\n         this.state.counters.map(c => {\n             c.value = 0;\n             return c;\n         });\n\n         this.setState({Counters})\n     }\n\n  render() {\n    return (\n    <React.Fragment>\n      <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length} />\n      <main className=\"container\">\n        <Counters counters={this.state.counters} onReset={this.handleReset} onIncrement={this.handleIncrement} onDelete={this.handleDelete}/>\n      </main>\n    </React.Fragment>\n    )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; \nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}